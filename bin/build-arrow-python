#!/bin/bash

function is_darwin() {
  case $(uname -s) in
    Darwin)
      return 0
      ;;
  esac
  return 1
}

function expand_path() {
  local d="$1"
  case "$d" in
    /*)
      echo "$d"
      ;;
    *)
      echo $(cd $(pwd)/$d; pwd)
      ;;
  esac
}

PYTHON=${PYTHON:-python3}

function run_build() {
  if is_darwin; then
    PKG_CONFIG_PATH=$(brew --prefix libffi)/lib/pkgconfig:$PKG_CONFIG_PATH
  fi
  export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH
  $PYTHON setup.py develop
}

PYARROW_PYTEST_FLAGS=" -r sxX --durations=15" #--parquet"

function run_test() {
  if [[ $# -gt 0 ]]; then
    $PYTHON -m pytest $PYARROW_PYTEST_FLAGS "$@"
  else
    $PYTHON -m pytest $PYARROW_PYTEST_FLAGS pyarrow/tests
  fi
}

function help() {
  cat <<HELP
Usage: $0 [OPTIONS]

Build Arrow Python library.

OPTIONS:

  --help       Show this message
  --build      Build Arrow Python
  --test       Run test of Arrow Python
  --release    Release build (the default is debug build)
  --cpp-build-dir=DIR   Specify Arrow C++ build directory

HELP
}

export PYARROW_BUILD_TYPE=debug
export PYARROW_WITH_PARQUET=1
export PYARROW_WITH_PLASMA=0
export PYARROW_WITH_ORC=1
export PYARROW_WITH_FLIGHT=0
export PYARROW_WITH_GANDIVA=1

ARROW_PYTHON_ROOT=$(pwd)
ARROW_CPP_ROOT=$(cd ${ARROW_PYTHON_ROOT}/../cpp pwd)
ARROW_CPP_BUILD_DIR=${ARROW_CPP_BUILD_DIR}/build
RUN_BUILD=0
RUN_TEST=0
PREFIX=/opt/arrow-dev

ARGS=()
while [[ $# -gt 0 ]]; do
  case "$1" in
    --help)
      help
      exit
      ;;
    --cpp-build-dir=*)
      ARROW_CPP_BUILD_DIR=$(echo "$1" | sed -e "s/--cpp-build-dir=//")
      ARROW_CPP_BUILD_DIR=$(cd ${ARROW_CPP_BUILD_DIR}; pwd)
      shift
      ;;
    --prefix)
      shift
      PREFIX="$1"
      ;;
    --release)
      export PYARROW_BUILD_TYPE=release
      shift
      ;;
    --build)
      RUN_BUILD=1
      shift
      ;;
    --test)
      RUN_TEST=1
      shift
      ;;
    *)
      ARGS+=("$1")
      shift
      ;;
  esac
done

if [ "$RUN_BUILD" == 0 -a "$RUN_TEST" == 0 ]; then
  RUN_BUILD=1
fi

set -ex

if [ "$RUN_BUILD" == 1 ]; then
  run_build
fi

if [ "$RUN_TEST" == 1 ]; then
  run_test "${ARGS}"
fi
