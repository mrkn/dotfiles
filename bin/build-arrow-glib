#!/bin/bash

function is_darwin() {
  case $(uname -s) in
    Darwin)
      return 0
      ;;
  esac
  return 1
}

function expand_path() {
  local d="$1"
  case "$d" in
    /*)
      echo "$d"
      ;;
    *)
      echo $(cd $(pwd)/$d; pwd)
      ;;
  esac
}

function run_meson() {
  if is_darwin; then
    PKG_CONFIG_PATH=$(brew --prefix libffi)/lib/pkgconfig:$PKG_CONFIG_PATH
  fi
  export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH
  meson --buildtype=$BUILD_TYPE --prefix=$PREFIX "$@"
}

function run_build() {
  ninja -C ${ARROW_GLIB_BUILD_DIR} -j ${BUILD_JOBS:-6}
}

function run_install() {
  ninja -C ${ARROW_GLIB_BUILD_DIR} install
}

function help() {
  cat <<HELP
Usage: $0 [OPTIONS] [BUILD_DIR]

Build Arrow GLib library on the build directory specified by BUILD_DIR.
The default build directory is "./build".

OPTIONS:

  --help                Show this message
  --meson               Run meson to configure the build environment
  --reconfigure         Specify --reconfigure flag to meson
  --install             Run ninja install
  --prefix     Specify the prefix directory to install
  --relrease            Release build (the default is debug build)

HELP
}

ARGS=()
RUN_MESON=0
RECONFIGURE=0
RUN_INSTALL=0
PREFIX=/opt/arrow-dev
BUILD_JOBS=6
BUILD_TYPE=debug
ARROW_GLIB_ROOT=$(pwd)
ARROW_GLIB_BUILD_DIR=${ARROW_GLIB_ROOT}/build

while [[ $# -gt 0 ]]; do
  case "$1" in
    --help)
      help
      exit
      ;;
    --meson)
      RUN_MESON=1
      ;;
    --reconfigure)
      RECONFIGURE=1
      ;;
    --install)
      RUN_INSTALL=1
      ;;
    --prefix)
      shift
      PREFIX="$1"
      ;;
    --release)
      BUILD_TYPE=release
      ;;
    *)
      ARGS+=("$1")
      ;;
  esac
  shift
done

if [ -n "${ARGS[0]}" ]; then
  ARROW_GLIB_BUILD_DIR=$(expand_path "${ARGS[0]}")
  if [ ! -d $ARROW_GLIB_BUILD_DIR ]; then
    mkdir -p $ARROW_GLIB_BUILD_DIR
  fi
fi

set -ex

if [ "$RUN_MESON" == 1 ]; then
  if [ "$RECONFIGURE" == 1 ]; then
    run_meson --reconfigure "$ARROW_GLIB_BUILD_DIR" "$ARROW_GLIB_ROOT"
  else
    run_meson "$ARROW_GLIB_BUILD_DIR" "$ARROW_GLIB_ROOT"
  fi
fi

run_build

if [ "$RUN_INSTALL" == 1 ]; then
  run_install
fi
