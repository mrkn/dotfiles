# vimproc

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

# quickrun

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  let g:quickrun_config = {
      \ '_' : {
          \ 'runner' : 'vimproc',
          \ 'runner/vimproc/updatetime' : 40,
          \ 'outputter' : 'error',
          \ 'outputter/error/success' : 'buffer',
          \ 'outputter/error/error' : 'quickfix',
          \ 'outputter/buffer/split' : ':botright 8sp',
      \ }
  \ }

  let g:quickrun_no_default_key_mappings = 1
  nmap <Leader>r :cclose<CR>:write<CR>:QuickRun -mode n<CR>
'''

# deoplete

[[plugins]]
repo = 'Shougo/deoplete.nvim'
#if = 'has("nvim")'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''

# denite

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  nnoremap [denite] <Nop>
  nmap <C-u> [denite]
  nnoremap <silent> [denite]<C-t> :<C-u>Denite filetype<CR>
  nnoremap <silent> [denite]<C-p> :<C-u>Denite file_rec<CR>
  nnoremap <silent> [denite]<C-j> :<C-u>Denite line<CR>
  nnoremap <silent> [denite]<C-g> :<C-u>Denite grep<CR>
  nnoremap <silent> [denite]<C-]> :<C-u>DeniteCursorWord grep<CR>
  nnoremap <silent> [denite]<C-r> :<C-u>Denite -resume<CR>
'''
hook_post_source = '''
  call denite#custom#var('file/rec', 'command', ['pt', '--follow', '--nocolor', --nogroup', '-g', ''])
  call denite#custom#var('grep', 'command', ['pt'])
  call denite#custom#var('grep', 'default_opts', ['--nogroup', '--nocolor', '--smart-case'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opts', [])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])
  call denite#custom#map('insert', '<C-j>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', '<C-k>', '<denite:move_to_previous_line>', 'noremap')

  call denite#custom#option('default', 'prompt', '>')

  call denite#custom#filter('matcher/ignore_globs', 'ignore_globs',
        \ [ '.git/',
        \   '.ropeproject/', '__pycache__/', '.venv', 'venv/',
        \   'images/', '*.min.*', 'img/', 'fonts/'
        \ ])
'''

# lightline

[[plugins]]
repo = 'itchyny/lightline.vim'

# git

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'

# toml

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# julia

[[plugins]]
repo = 'JuliaEditorSupport/julia-vim'
on_ft = ['julia']

# ruby

[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = ['ruby']

[[plugins]]
repo = 'mrkn/vim-cruby'

# terraform

[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = ['terraform', 'javascript']

# wakatime

[[plugins]]
repo = 'wakatime/vim-wakatime'

# mrkn256
[[plugins]]
repo = 'mrkn/mrkn256.vim'

# Solarized

[[plugins]]
repo = 'altercation/vim-colors-solarized'

# Tomorrow

[[plugins]]
repo = 'chriskempson/tomorrow-theme'
rtp = 'vim'

# nerdtree

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  autocmd VimEnter * execute 'NERDTree'
'''

# etc.

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup = 1
'''

[[plugins]]
repo = 'tpope/vim-surround'
